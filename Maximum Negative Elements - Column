Maximum Negative Elements - Column
The program must accept an integer matrix of size RxC as the input. The program must print the column
number which has the most number of negative numbers in the given matrix as the output. If more than one
column have the most number of negative numbers then the program must print the rst ocurring such
column number as the output. If the matrix does not contain any negative element then the program must
print -1 as the output.
Boundary Condition(s):
1 <= R, C <= 100
Input Format:
The rst line contains two integers R and C separated by a space.
The next R lines contain C integers separated by space(s).
Output Format:
The rst line contains either the column number which has the most number of negative numbers or -1.
Example Input/Output 1:
Input:
3 4
10 20 11 -12
-22 -23 89 -79
-89 10 29 -12
Output:
4
Explanation:
The 1 column contains 2 negative numbers.
The 2 column contains 1 negative number.
The 3 column does not contain any negative number.
The 4 column contains 3 negative numbers.
Here, the column 4 has the most number of negative numbers.
Hence the output is 4.
Example Input/Output 2:
Input:
3 3
11 91 81
90 10 20
89 88 87
Output:
-1



import java.util.*;
public class Hello 
{
    public static void main(String[] args) 
    {
        Scanner s=new Scanner(System.in);
        int j,i,c=0,t=0;
        int[][] a=new int[1000][1000];
        int m=s.nextInt();
        int n=s.nextInt();
        int[] b=new int[n+1];
        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                a[i][j]=s.nextInt();
                if(a[i][j]<0)
                b[j]+=1;
            }
        }
        for(i=1;i<=n;i++)
        {
            if(b[i]>c)
            {
            c=b[i];
            t=i;
            }
        }
        if(t==0)
        t--;
       System.out.print(t);
	}
}
