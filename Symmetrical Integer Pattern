Symmetrical Integer Pattern
The program must accept an integer N as the input. The program must print the desired pattern as shown in the Example Input/Output
sections.
Boundary Condition(s):
1 <= N <= 20
Input Format:
The first line contains the integer N.
Output Format:
The list of lines contain the desired pattern.
Example Input/Output 1:
Input:
5
Output:
0
505
45054
3450543
234505432
12345054321
Example Input/Output 2:
Input:
4
Output:
0
404
34043
2340432
123404321



#include<stdio.h>
#include <stdlib.h>
int main()
{
    int n,i,j,k;
    scanf("%d",&n);
    printf("0\n");
    while(i<n)
    {
    for(j=n-i;j<=n;j++)
    printf("%d",j);
    printf("0");
    for(k=n;k>=n-i;k--)
    printf("%d",k);
    printf("\n");
    i++;
    }
return 0;
}


#include <iostream>
using namespace std;
int main(int argc, char** argv)
{
    int n,i,j,k;
    cin>>n;
    cout<<"0\n";
    for(i=0;i<n;i++)
    {
        for(j=n-i;j<=n;j++)
        cout<<j;
        cout<<0;
        for(k=n;k>=n-i;k--)
        cout<<k;
        cout<<"\n";
    }
}



n=int(input())
print("0\n")
i=0
while i<n:
    for j in range(n-i,n+1):
        print(j,end='')
    print("0",end='')
    k=n
    while k>=n-i:
        print(k,end='')
        k-=1
    print("\n")
    i+=1
