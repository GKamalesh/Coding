Consider a matrix M of integers. Divide M into 4 sub-matrices. These sub-matrices are called as Quadrants. Report the Quadrant number which has the smallest minimum-element. If two or more quadrants have same smallest minimum, report the smallest quadrant index.

The matrix M is divided into four quadrants by halving the rows and columns. If row/column is an odd number, divide them in such a way that the first half of the row/column should be one smaller than the second half. 

The four quadrants are numbered from 1 to 4 in the structure shown below:

 Q1 | Q2
 ---+---
 Q3 | Q4



INPUT FORMAT:
M is a matrix of integers. You would be given two numbers m and n specifying the number of rows and columns. This would be followed by m lines of n integers each specifying the data of the m*n matrix M.

n and m will be greater than 1 and less than 12.

OUTPUT FORMAT:
Print in a separate line, the quadrant number with the smallest minimum-element.

Sample Test Cases
Input	Output
Test Case 1	
2 2
-1 2
3 -1
1
Test Case 2	
3 3
1 2 -1
-1 1 2
-9 2 3
3



#include<stdio.h>
int main()
{
  int a[1000][1000],i,j,m,n,s,t=0,u=0;
  scanf("%d%d",&m,&n);
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
    scanf("%d",&a[i][j]);
    if(i==0 && j==0)
      s=a[i][j];
    else if(a[i][j]<s)
    {
    s=a[i][j];
      t=i;
        u=j;
    }
    }
  }
   if(t<m/2)
    {
      if(u<n/2)
        printf("1");
      else
        printf("2");
    }
   else
   {
   if(u<n/2)
     printf("3");
   else
     printf("4");
   }
   return 0;
}
