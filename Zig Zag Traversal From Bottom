Zig Zag Traversal From Bottom

Given an integer a matrix of size M x N, print the elements of the matrix in zig zag order from bottom.

Boundary Condition:
1<= M, N <= 100

Input Format:
The first line contains the integer M and N separated by space.
The next M lines contain the matrix values.

Output Format:
The first line contains all the elements in zig zag order from bottom.

Sample Input/Output 1:
Input:
3 3
1 2 3
4 5 6
7 8 9Â 

Output:
9 6 8 7 5 3 2 4 1

Sample Input/Output 2:
Input:
3 5
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15

Output:
15 10 14 13 9 5 4 8 12 11 7 3 2 6 1



#include<stdio.h>
#include<stdlib.h>
int main()
{
    int n,i,a[1000][1000],m,j,b[10000],d=0,t,c=0;
    scanf("%d %d",&m,&n);
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        scanf("%d",&a[i][j]);
    }
    i=m-1;
    j=n-1;
    while(i>0 || j>0)
    {
        t=1;
        if(i==m-1 && j==n-1)
        t=0;
        while(t!=0)
        {
          b[d]=a[i][j];
         d++;
            if(c%2==0)
            {
                i-=1;
                if(j<n-1)
                j+=1;
                if(j==n-1 || i==0)
                t=0;
            }
            else
            {
            j-=1;
            if(i<m-1)
            i+=1;
            if(i==m-1 || j==0)
            t=0;
            }
        }
        b[d]=a[i][j];
        d++;
        if((c%2==0 && i!=0) || j==0)
        {
            i-=1;
            c++;
        }
        else 
        {
            j-=1;
            c++;
        }
    }
    b[d]=a[0][0];
    for(i=0;i<=d;i++)
    printf("%d ",b[i]);
}
