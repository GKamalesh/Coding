N Equal Strings
The program must accept a string S and an integer N as the input. The program must print N equal parts of the string S if the string S can be
divided into N equal parts. Else the program must print -1 as the output.
Boundary Condition(s):
2 <= Length of S <= 1000
2 <= N <= Length of S
Example Input/Output 1:
Input:
whiteblackgreen 3
Output:
white black green
Explanation:
Divide the string whiteblackgreen into 3 equal parts as white black green
Hence the output is white black green
Example Input/Output 2:
Input:
pencilrubber 5
Output:
-1




import java.util.*;
public class Hello 
{
    public static void main(String[] args)
    {
        Scanner s=new Scanner(System.in);
        String a=s.next();
        int n=s.nextInt();
        int i,m,t=0,j;
        m=a.length();
        if(m%n==0)
        {
            for(i=0;i<m;i++)
            {
                if(i==m/n-1+t)
                {
                    for(j=t;j<=i;j++)
                    System.out.print(a.charAt(j));
                    t=i+1;
                    System.out.print(" ");
                }
            }
        }
        else
        System.out.print("-1");
	}
}



s,n=map(str,input().split(" "))
n=int(n)
m=len(s)
i,j=0,m//n
if m%n==0:
    while i<m and j<=m:
        print(s[i:j])
        i+=m//n
        j+=m//n
else:
    print("-1")



#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int main()
{
    char a[1000];
    int t=0,n,i,m;
    scanf("%s",a);
    scanf("%d",&n);
    m=strlen(a);
    if(m%n==0)
    {
        for(i=0;i<m;i++)
        {
            if(i==m/n+t)
            {
                printf(" ");
                t=i;
                i--;
            }
            else
            printf("%c",a[i]);
        }
    }
    else
    printf("-1");
    return 0;
}
