Adjacent Even Digits
The program must accept an integer N as the input. The program must print the digits surrounded by even digits on both sides. The first and last
digits have only one digit adjacent digit to them. So consider only the single adjacent digit for them. If there is no digit surrounded by even digits,
then the program must print -1 as the output.
Boundary Condition(s):
11 <= N <= 999999999
Input Format:
The first line contains the value N.
Output Format:
The first line contains either the digits having even adjacent digits or -1.
Example Input/Output 1:
Input:
14689025
Output:
1695
Explanation:
The adjacent digit of 1 is 4 (even number). So 1 is printed.
The adjacent digits of 4 are 1 and 6 (only 6 is even). So 4 is not printed.
The adjacent digits of 6 are 4 and 8 (both are even numbers). So 6 is printed.
The adjacent digits of 8 are 6 and 9 (only 6 is even). So 8 is not printed.
The adjacent digits of 9 are 8 and 0 (both are even numbers). So 9 is printed.
The adjacent digits of 0 are 9 and 2 (only 2 is even). So 0 is not printed.
The adjacent digits of 2 are 0 and 5 (only 0 is even). So 2 is not printed.
The adjacent digit of 5 is 2 (even number). So 5 is printed.
Hence the output is 1695.
Example Input/Output 2:
Input:
1357935
Output:
-1
 SkillRack
Proc



import java.util.*;
public class Hello {
    
    public static void main(String[] args) {
        Scanner s=new Scanner(System.in);
        int[] a=new int[1000];
        int i,n,r,j=0,t=0;
        n=s.nextInt();
        while(n>0)
        {
            r=n%10;
            a[j]=r;
            j++;
            n/=10;
        }
        for(i=j-1;i>=0;i--)
        {
            if(i==0)
            {
                if(a[i+1]%2==0)
                {
                    System.out.print(a[i]);
                    t=1;
                }
            }
            else if(i==j-1)
            {
                if(a[i-1]%2==0)
                {
                    System.out.print(a[i]);
                    t=1;
                }
            }
            else
            {
                if(a[i+1]%2==0 && a[i-1]%2==0)
                {
                    t=1;
                System.out.print(a[i]);
                }
            }
        }
        if(t==0)
        System.out.println("-1");
	}
}



n=int(input()[::-1])
m=n
t=0
while n>0:
    r=n%10
    if n==m:
        if ((n//10)%10)%2==0:
            t=1
            print(r,end='')
    elif n//10==0:
        if (n*10+a)%2==0:
            t=1
            print(r,end='')
    else:
        if a%2==0 and ((n//10)%10)%2==0:
            t=1
            print(r,end='')
    a=r
    n//=10
if t==0:
    print("-1")
    
    

#include<stdio.h>
#include <stdlib.h>
int main()
{
    int n,i,a[1000],j=0,r,t=0;
    scanf("%d",&n);
     while(n>0)    
     {
         r=n%10;
         a[j]=r; 
         j++;       
         n/=10; 
    }
    for(i=j-1;i>=0;i--)
    {
        if(i==0)            
        { 
            if(a[i+1]%2==0) 
            {
                printf("%d",a[i]); 
                t=1;            
            }
        }
        else if(i==j-1)
        {       
            if(a[i-1]%2==0)     
            {   
                printf("%d",a[i]);  
                t=1;            
            }
        }
        else            
        {
            if(a[i+1]%2==0 && a[i-1]%2==0)
            {       
                t=1;                
                printf("%d",a[i]);
            } 
        }
    }
    if(t==0)
    printf("-1");
    return 0;
}
